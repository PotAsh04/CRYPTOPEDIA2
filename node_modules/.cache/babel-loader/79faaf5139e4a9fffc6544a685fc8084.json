{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kosal\\\\Desktop\\\\my_projects\\\\cryptopedia\\\\src\\\\components\\\\HistoryChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport Chartjs from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoryChart() {\n  _s();\n\n  const chartRef = useRef(); //  chartref.current will be used to refer to the canvas\n\n  useEffect(() => {\n    if (chartRef && chartRef.current) // if chartref exists and has a legit value\n      {\n        const chartInstance = new Chartjs(chartRef.current, {\n          type: 'bar',\n          data: {\n            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n            datasets: [{\n              label: '# of Votes',\n              data: [12, 19, 3, 5, 2, 3],\n              backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n              borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n              borderWidth: 1\n            }]\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        });\n      }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      id: \"myChart\",\n      width: 250,\n      height: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HistoryChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n\n_c = HistoryChart;\nexport default HistoryChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoryChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chartjs","HistoryChart","chartRef","current","chartInstance","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero"],"sources":["C:/Users/kosal/Desktop/my_projects/cryptopedia/src/components/HistoryChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport Chartjs from 'chart.js'\r\n\r\nfunction HistoryChart()\r\n{\r\n  const chartRef=useRef();   //  chartref.current will be used to refer to the canvas\r\n\r\n  useEffect(() => {\r\n    if(chartRef && chartRef.current)   // if chartref exists and has a legit value\r\n    {\r\n        const chartInstance = new Chartjs(chartRef.current, {\r\n        type: 'bar',\r\n        data: {\r\n            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n            datasets: [{\r\n                label: '# of Votes',\r\n                data: [12, 19, 3, 5, 2, 3],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(54, 162, 235, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(153, 102, 255, 0.2)',\r\n                    'rgba(255, 159, 64, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(153, 102, 255, 1)',\r\n                    'rgba(255, 159, 64, 1)'\r\n                ],\r\n                borderWidth: 1\r\n            }]\r\n        },\r\n        options: {\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true\r\n                }\r\n            }\r\n        }\r\n      });\r\n    }    \r\n  },[])\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={chartRef} id='myChart' width={250} height={250}></canvas>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HistoryChart"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,UAApB;;;AAEA,SAASC,YAAT,GACA;EAAA;;EACE,MAAMC,QAAQ,GAACH,MAAM,EAArB,CADF,CAC6B;;EAE3BD,SAAS,CAAC,MAAM;IACd,IAAGI,QAAQ,IAAIA,QAAQ,CAACC,OAAxB,EAAmC;MACnC;QACI,MAAMC,aAAa,GAAG,IAAIJ,OAAJ,CAAYE,QAAQ,CAACC,OAArB,EAA8B;UACpDE,IAAI,EAAE,KAD8C;UAEpDC,IAAI,EAAE;YACFC,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C,QAA7C,CADN;YAEFC,QAAQ,EAAE,CAAC;cACPC,KAAK,EAAE,YADA;cAEPH,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFC;cAGPI,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;cAWPC,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;cAmBPC,WAAW,EAAE;YAnBN,CAAD;UAFR,CAF8C;UA0BpDC,OAAO,EAAE;YACLC,MAAM,EAAE;cACJC,CAAC,EAAE;gBACCC,WAAW,EAAE;cADd;YADC;UADH;QA1B2C,CAA9B,CAAtB;MAkCH;EACF,CAtCQ,EAsCP,EAtCO,CAAT;EAyCA,oBACE;IAAA,uBACE;MAAQ,GAAG,EAAEd,QAAb;MAAuB,EAAE,EAAC,SAA1B;MAAoC,KAAK,EAAE,GAA3C;MAAgD,MAAM,EAAE;IAAxD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAlDQD,Y;;KAAAA,Y;AAoDT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}