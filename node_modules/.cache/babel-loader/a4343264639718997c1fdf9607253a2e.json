{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kosal\\\\Desktop\\\\my_projects\\\\cryptopedia\\\\src\\\\components\\\\HistoryChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport Chartjs from 'chart.js';\nimport { chartOptions } from '../chartConfigs/chartConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HistoryChart(_ref) {\n  _s();\n\n  let {\n    coinData\n  } = _ref;\n  const chartRef = useRef(); //  chartref.current will be used to refer to the canvas\n\n  useEffect(() => {\n    if (chartRef && chartRef.current) // if chartref exists and has a legit value\n      {\n        const chartInstance = new Chartjs(chartRef.current, {\n          type: 'line',\n          data: {\n            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n            datasets: [{\n              label: '# of Votes',\n              data: [{\n                x: 1,\n                y: 10\n              }, {\n                x: 2,\n                y: 20\n              }, {\n                x: 3,\n                y: 15\n              }, {\n                x: 5,\n                y: 5\n              }],\n              backgroundColor: \"rgba(174, 305, 194, 0.5)\",\n              borderColor: \"rgba(174, 305, 194, 0.4\",\n              pointRadius: 0\n            }]\n          },\n          options: chartOptions\n        });\n      }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white border mt-2 rounded p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        id: \"myChart\",\n        width: 250,\n        height: 250\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HistoryChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n\n_c = HistoryChart;\nexport default HistoryChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoryChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chartjs","chartOptions","HistoryChart","coinData","chartRef","current","chartInstance","type","data","labels","datasets","label","x","y","backgroundColor","borderColor","pointRadius","options"],"sources":["C:/Users/kosal/Desktop/my_projects/cryptopedia/src/components/HistoryChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport Chartjs from 'chart.js'\r\nimport { chartOptions } from '../chartConfigs/chartConfig';\r\n\r\nfunction HistoryChart({coinData})\r\n{\r\n  const chartRef=useRef();   //  chartref.current will be used to refer to the canvas\r\n  \r\n  useEffect(() => {\r\n    if(chartRef && chartRef.current)   // if chartref exists and has a legit value\r\n    {\r\n        const chartInstance = new Chartjs(chartRef.current, {\r\n        type: 'line',\r\n        data: {\r\n            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n            datasets: [{\r\n                label: '# of Votes',\r\n                data: [\r\n                  {x:1,y:10},\r\n                  {x:2,y:20},\r\n                  {x:3,y:15},\r\n                  {x:5,y:5}\r\n                ],\r\n                backgroundColor: \"rgba(174, 305, 194, 0.5)\",\r\n                borderColor: \"rgba(174, 305, 194, 0.4\",\r\n                pointRadius: 0,\r\n                \r\n            }]\r\n        },\r\n        options: chartOptions,\r\n      });\r\n    }    \r\n  },[])\r\n  \r\n\r\n  return (\r\n    <div className=\"bg-white border mt-2 rounded p-3\">\r\n      <div>\r\n        \r\n      </div>\r\n      <div>\r\n        <canvas ref={chartRef} id='myChart' width={250} height={250}></canvas>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HistoryChart"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,YAAT,QAA6B,6BAA7B;;;AAEA,SAASC,YAAT,OACA;EAAA;;EAAA,IADsB;IAACC;EAAD,CACtB;EACE,MAAMC,QAAQ,GAACL,MAAM,EAArB,CADF,CAC6B;;EAE3BD,SAAS,CAAC,MAAM;IACd,IAAGM,QAAQ,IAAIA,QAAQ,CAACC,OAAxB,EAAmC;MACnC;QACI,MAAMC,aAAa,GAAG,IAAIN,OAAJ,CAAYI,QAAQ,CAACC,OAArB,EAA8B;UACpDE,IAAI,EAAE,MAD8C;UAEpDC,IAAI,EAAE;YACFC,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C,QAA7C,CADN;YAEFC,QAAQ,EAAE,CAAC;cACPC,KAAK,EAAE,YADA;cAEPH,IAAI,EAAE,CACJ;gBAACI,CAAC,EAAC,CAAH;gBAAKC,CAAC,EAAC;cAAP,CADI,EAEJ;gBAACD,CAAC,EAAC,CAAH;gBAAKC,CAAC,EAAC;cAAP,CAFI,EAGJ;gBAACD,CAAC,EAAC,CAAH;gBAAKC,CAAC,EAAC;cAAP,CAHI,EAIJ;gBAACD,CAAC,EAAC,CAAH;gBAAKC,CAAC,EAAC;cAAP,CAJI,CAFC;cAQPC,eAAe,EAAE,0BARV;cASPC,WAAW,EAAE,yBATN;cAUPC,WAAW,EAAE;YAVN,CAAD;UAFR,CAF8C;UAkBpDC,OAAO,EAAEhB;QAlB2C,CAA9B,CAAtB;MAoBH;EACF,CAxBQ,EAwBP,EAxBO,CAAT;EA2BA,oBACE;IAAK,SAAS,EAAC,kCAAf;IAAA,wBACE;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,uBACE;QAAQ,GAAG,EAAEG,QAAb;QAAuB,EAAE,EAAC,SAA1B;QAAoC,KAAK,EAAE,GAA3C;QAAgD,MAAM,EAAE;MAAxD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAzCQF,Y;;KAAAA,Y;AA2CT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}