{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kosal\\\\Desktop\\\\my_projects\\\\cryptopedia\\\\src\\\\pages\\\\CoinDetailPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CoinData from '../components/CoinData';\nimport HistoryChart from '../components/HistoryChart';\nimport coinGecko from '../apis/coinGecko';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CoinDetailPage() {\n  _s();\n\n  var coinid = useParams().id;\n  const [coinData, setCoinData] = useState({});\n  const [isLoading, setIsLoading] = useState(false); // function to convert array of arrays to array of objects for chartjs compatablity\n\n  function formatdata(data) {\n    return data.map(el => {\n      return {\n        t: el[0],\n        y: el[1].toFixed(2)\n      };\n    });\n  }\n\n  useEffect(() => {\n    async function fetchdata() {\n      // console.log(\"debug statement 1\");\n      setIsLoading(true);\n      const [day, week, year, detail] = await Promise.all([coinGecko.get(`/coins/${coinid}/market_chart/`, {\n        params: {\n          vs_currency: \"inr\",\n          days: \"1\"\n        }\n      }), coinGecko.get(`/coins/${coinid}/market_chart/`, {\n        params: {\n          vs_currency: \"inr\",\n          days: \"7\"\n        }\n      }), coinGecko.get(`/coins/${coinid}/market_chart/`, {\n        params: {\n          vs_currency: \"inr\",\n          days: \"365\"\n        }\n      }), coinGecko.get(\"/coins/markets/\", {\n        params: {\n          vs_currency: \"usd\",\n          ids: coinid\n        }\n      })]);\n      setCoinData({\n        day: formatdata(day.data.prices),\n        week: formatdata(week.data.prices),\n        year: formatdata(year.data.prices),\n        detail: detail.data[0]\n      }); // console.log(day.data.prices);\n      // console.log(coinData.day);\n      // console.log(\"debug statement 2\");\n\n      setIsLoading(false);\n    }\n\n    fetchdata();\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HistoryChart, {\n      data: coinData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CoinData, {\n      details: coinData.d\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CoinDetailPage, \"owPI8CP2Y7iKOcgQozGYEvUnL3s=\", false, function () {\n  return [useParams];\n});\n\n_c = CoinDetailPage;\nexport default CoinDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinDetailPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","CoinData","HistoryChart","coinGecko","CoinDetailPage","coinid","id","coinData","setCoinData","isLoading","setIsLoading","formatdata","data","map","el","t","y","toFixed","fetchdata","day","week","year","detail","Promise","all","get","params","vs_currency","days","ids","prices","d"],"sources":["C:/Users/kosal/Desktop/my_projects/cryptopedia/src/pages/CoinDetailPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport CoinData from '../components/CoinData';\r\nimport HistoryChart from '../components/HistoryChart';\r\nimport coinGecko from '../apis/coinGecko';\r\n\r\nfunction CoinDetailPage()\r\n{\r\n  var coinid=useParams().id;\r\n  const [coinData,setCoinData]=useState({});\r\n  const [isLoading,setIsLoading]=useState(false);\r\n\r\n  // function to convert array of arrays to array of objects for chartjs compatablity\r\n  function formatdata(data)\r\n  {\r\n    return data.map(el => {\r\n      return {\r\n        t:el[0],\r\n        y:el[1].toFixed(2),\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    async function fetchdata()\r\n    {\r\n      // console.log(\"debug statement 1\");\r\n      setIsLoading(true);\r\n      const [day,week,year,detail]= await Promise.all([\r\n                                        coinGecko.get(`/coins/${coinid}/market_chart/`,{\r\n                                        params: {\r\n                                            vs_currency: \"inr\",\r\n                                            days: \"1\"\r\n                                        }\r\n                                        }),\r\n                                        coinGecko.get(`/coins/${coinid}/market_chart/`,{\r\n                                          params: {\r\n                                              vs_currency: \"inr\",\r\n                                              days: \"7\"\r\n                                          }\r\n                                        }),\r\n                                        coinGecko.get(`/coins/${coinid}/market_chart/`,{\r\n                                          params: {\r\n                                              vs_currency: \"inr\",\r\n                                              days: \"365\"\r\n                                          }\r\n                                        }),\r\n                                        coinGecko.get(\"/coins/markets/\",{\r\n                                          params: {\r\n                                              vs_currency: \"usd\",\r\n                                              ids: coinid\r\n                                          }\r\n                                        })\r\n                                        ]);\r\n        setCoinData({\r\n                      day:formatdata(day.data.prices ), \r\n                      week:formatdata(week.data.prices), \r\n                      year:formatdata(year.data.prices), \r\n                      detail:(detail.data[0])\r\n                    });\r\n        // console.log(day.data.prices);\r\n        // console.log(coinData.day);\r\n        // console.log(\"debug statement 2\");\r\n        setIsLoading(false);\r\n    }\r\n    fetchdata();\r\n},[])\r\n  if(isLoading)\r\n  return <div></div>\r\n  return (\r\n    <div>\r\n        <HistoryChart data={coinData}></HistoryChart>\r\n        <CoinData details={coinData.d}></CoinData>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CoinDetailPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;AAEA,SAASC,cAAT,GACA;EAAA;;EACE,IAAIC,MAAM,GAACL,SAAS,GAAGM,EAAvB;EACA,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBT,QAAQ,CAAC,EAAD,CAArC;EACA,MAAM,CAACU,SAAD,EAAWC,YAAX,IAAyBX,QAAQ,CAAC,KAAD,CAAvC,CAHF,CAKE;;EACA,SAASY,UAAT,CAAoBC,IAApB,EACA;IACE,OAAOA,IAAI,CAACC,GAAL,CAASC,EAAE,IAAI;MACpB,OAAO;QACLC,CAAC,EAACD,EAAE,CAAC,CAAD,CADC;QAELE,CAAC,EAACF,EAAE,CAAC,CAAD,CAAF,CAAMG,OAAN,CAAc,CAAd;MAFG,CAAP;IAID,CALM,CAAP;EAMD;;EAEDnB,SAAS,CAAC,MAAI;IACZ,eAAeoB,SAAf,GACA;MACE;MACAR,YAAY,CAAC,IAAD,CAAZ;MACA,MAAM,CAACS,GAAD,EAAKC,IAAL,EAAUC,IAAV,EAAeC,MAAf,IAAwB,MAAMC,OAAO,CAACC,GAAR,CAAY,CACdrB,SAAS,CAACsB,GAAV,CAAe,UAASpB,MAAO,gBAA/B,EAA+C;QAC/CqB,MAAM,EAAE;UACJC,WAAW,EAAE,KADT;UAEJC,IAAI,EAAE;QAFF;MADuC,CAA/C,CADc,EAOdzB,SAAS,CAACsB,GAAV,CAAe,UAASpB,MAAO,gBAA/B,EAA+C;QAC7CqB,MAAM,EAAE;UACJC,WAAW,EAAE,KADT;UAEJC,IAAI,EAAE;QAFF;MADqC,CAA/C,CAPc,EAadzB,SAAS,CAACsB,GAAV,CAAe,UAASpB,MAAO,gBAA/B,EAA+C;QAC7CqB,MAAM,EAAE;UACJC,WAAW,EAAE,KADT;UAEJC,IAAI,EAAE;QAFF;MADqC,CAA/C,CAbc,EAmBdzB,SAAS,CAACsB,GAAV,CAAc,iBAAd,EAAgC;QAC9BC,MAAM,EAAE;UACJC,WAAW,EAAE,KADT;UAEJE,GAAG,EAAExB;QAFD;MADsB,CAAhC,CAnBc,CAAZ,CAApC;MA0BEG,WAAW,CAAC;QACEW,GAAG,EAACR,UAAU,CAACQ,GAAG,CAACP,IAAJ,CAASkB,MAAV,CADhB;QAEEV,IAAI,EAACT,UAAU,CAACS,IAAI,CAACR,IAAL,CAAUkB,MAAX,CAFjB;QAGET,IAAI,EAACV,UAAU,CAACU,IAAI,CAACT,IAAL,CAAUkB,MAAX,CAHjB;QAIER,MAAM,EAAEA,MAAM,CAACV,IAAP,CAAY,CAAZ;MAJV,CAAD,CAAX,CA7BJ,CAmCI;MACA;MACA;;MACAF,YAAY,CAAC,KAAD,CAAZ;IACH;;IACDQ,SAAS;EACZ,CA3CU,EA2CT,EA3CS,CAAT;EA4CA,IAAGT,SAAH,EACA,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAP;EACA,oBACE;IAAA,wBACI,QAAC,YAAD;MAAc,IAAI,EAAEF;IAApB;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,QAAD;MAAU,OAAO,EAAEA,QAAQ,CAACwB;IAA5B;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GArEQ3B,c;UAEIJ,S;;;KAFJI,c;AAuET,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}